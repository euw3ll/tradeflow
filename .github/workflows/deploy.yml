name: Deploy TradeFlow

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Rsync repository to VPS
        run: |
          rsync -az --delete \
            --exclude '.git/' \
            --exclude '.github/' \
            --exclude '.env' \
            --exclude 'data/' \
            --exclude 'logs/' \
            --exclude 'postgres_data/' \
            --exclude '__pycache__/' \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/tradeflow/

      - name: Remote compose up
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          ssh -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" <<'EOF'
          set -euo pipefail
          cd /opt/tradeflow
          if [ ! -f .env ]; then
            echo "[ERROR] /opt/tradeflow/.env não existe na VPS" >&2
            exit 1
          fi
          mkdir -p logs
          chmod +x start.sh || true
          docker compose pull || true
          docker compose build --pull
          docker compose up -d
          docker image prune -f || true
          EOF

    # Requer Secrets no repositório:
    # - SSH_HOST (ex.: 72.60.159.107)
    # - SSH_PORT (ex.: 22)
    # - SSH_USER (ex.: deploy)
    # - SSH_PRIVATE_KEY (chave privada correspondente à pública na VPS)
